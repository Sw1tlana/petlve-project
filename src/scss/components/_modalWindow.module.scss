@use '../utils/functions' as fn;
@use '../utils/variables' as var;
@use '../utils/mixins' as mx;

@keyframes fadeInScale {
    from {
        opacity: 0;
        transform: scale(-1);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.noticeContent {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .modalContent {
    position: fixed;
    top: 0;
    right: 0;
  }

.closeButton {
    position: absolute;
    top: 20px;
    right: 16px;
    background-color: transparent;
    border: transparent;

    animation: fadeInScale 1s ease-in-out;

    @include mx.transition(all, 300ms, ease-in-out);
}

.closeBtn {
    border: none;
    background-color: transparent;
     position: relative;
     top: 50px;
     right: 20px;

    animation: fadeInScale 1s ease-in-out;

    @include mx.transition(all, 300ms, ease-in-out);
}

.iconClose {
    fill: fn.get-color('light');
}

.iconClose:active,
.iconClose:hover {
    fill: fn.get-color('dark-secondary');
}

.iconCloseBtn {
    fill: fn.get-color('dark-primary'); 
    width: 14px;
    height: 14px;
}

.iconCloseBtn:active,
.iconClose:hover {
    fill: fn.get-color('accent-primary');
}

.modalContent {
    position: absolute;
    top: 0;
    right: -20%;
    opacity: 20%;
    border-radius: 15px;
    z-index: 15;
}

.noticeContent {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


.modalContentOpen {
    opacity: 1;
}

.beforeClose {
    opacity: 0;
}


@include mx.mq('md') {

    .modalContent {
        right: 0;
    }

    .noticeContent {
        left: 56%;
    }

    .closeBtn {
         top: 50px;
         left: 420px;
    
    }
    .modalContent {
        right: 0;
    }
    
}